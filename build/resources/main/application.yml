spring:
  application:
    name: log4j-vulnerability-demo
  
  # 데이터베이스 설정
  datasource:
    url: jdbc:mysql://localhost:3306/log4j_demo?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&useUnicode=true&characterEncoding=UTF-8
    username: root
    password: rootoor
    driver-class-name: com.mysql.cj.jdbc.Driver


  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
    open-in-view: false

  # Thymeleaf 설정
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8
    cache: false
    check-template: true
    check-template-location: true

  # Jackson 설정 (JSON 처리)
  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: Asia/Seoul
    date-format: yyyy-MM-dd HH:mm:ss

  # 서블릿 설정
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  # 보안 설정
  security:
    user:
      name: admin
      password: admin123
      roles: ADMIN

# 서버 설정
server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

# 로깅 설정 (Log4j2 강제 사용)
logging:
  config: classpath:log4j2.xml
  pattern:
    console: "" # Log4j2 설정 파일에서 관리
    file: ""    # Log4j2 설정 파일에서 관리
  level:
    com.example.demo: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.apache.logging.log4j: DEBUG

# 관리 엔드포인트 (Actuator)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,loggers
  endpoint:
    health:
      show-details: always

# 사용자 정의 설정
app:
  # JWT 설정 (향후 확장용)
  jwt:
    secret: mySecretKey123456789012345678901234567890
    expiration: 86400000  # 24시간
  
  # 보안 설정
  security:
    cors:
      allowed-origins: "*"
      allowed-methods: "*"
      allowed-headers: "*"
  
  # Log4j 취약점 실습 설정
  vulnerability:
    enabled: true
    log-level: DEBUG
    simulation-mode: true
    attack-detection: true

---
# 개발 환경 설정
spring:
  config:
    activate:
      on-profile: dev
  
  datasource:
    url: jdbc:mysql://localhost:3306/log4j_demo_dev?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
  
  jpa:
    hibernate:
      ddl-auto: create-drop  # 개발 시 매번 테이블 재생성
    show-sql: true

logging:
  level:
    com.example.demo: DEBUG
    root: INFO

---
# 테스트 환경 설정
spring:
  config:
    activate:
      on-profile: test
  
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
  
  h2:
    console:
      enabled: true

---
# 운영 환경 설정 (취약점 실습용이므로 실제 운영 금지)
spring:
  config:
    activate:
      on-profile: prod
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false

logging:
  level:
    com.example.demo: INFO
    root: WARN