version: '3.8'

services:
  # MySQL 데이터베이스
  mysql:
    image: mysql:8.0
    container_name: log4j-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootoor
      MYSQL_DATABASE: log4j_demo
      MYSQL_USER: log4j_user
      MYSQL_PASSWORD: log4j_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - log4j-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # Spring Boot 애플리케이션
  app:
    build: .
    container_name: log4j-app
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/log4j_demo?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
      - SPRING_DATASOURCE_USERNAME=log4j_user
      - SPRING_DATASOURCE_PASSWORD=log4j_pass
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
      - SPRING_JPA_SHOW_SQL=true
      - JAVA_OPTS=-Dlog4j2.formatMsgNoLookups=false -Dcom.sun.jndi.ldap.object.trustURLCodebase=true -Dcom.sun.jndi.rmi.object.trustURLCodebase=true
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/app/logs
    depends_on:
      - mysql
    networks:
      - log4j-network
    restart: unless-stopped

  # Nginx 리버스 프록시
  nginx:
    image: nginx:alpine
    container_name: log4j-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - log4j-network
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  log4j-network:
    driver: bridge