version: '3.8'

services:
  # Spring Boot 애플리케이션
  app:
    build: .
    container_name: log4j-app
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:mysql://192.168.100.71:3306/log4j_demo?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
      - SPRING_DATASOURCE_USERNAME=webuser
      - SPRING_DATASOURCE_PASSWORD=webuser
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - JAVA_OPTS=-Dlog4j2.formatMsgNoLookups=false -Dcom.sun.jndi.ldap.object.trustURLCodebase=true -Dcom.sun.jndi.rmi.object.trustURLCodebase=true
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/app/logs
    networks:
      - log4j-network
    restart: unless-stopped
    # MySQL 서버가 준비될 때까지 재시도
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  # Nginx 리버스 프록시
  nginx:
    image: nginx:alpine
    container_name: log4j-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - app
    networks:
      - log4j-network
    restart: unless-stopped

networks:
  log4j-network:
    driver: bridge